//Universidad del Valle de Guatemala 
//Electrónica Digital 2
//Julio Pérez, Rodrigo Cabrera y José García. 
//Laboratorio 5
//Librerías utilizadas en el circuito. 
#include <Arduino.h>
#include "driver/ledc.h"
#include "config.h"
#include "display7seg.h"


#define BTN1 5

// Definición de pines para los dígitos
#define DIS1 2
#define DIS2 18
// Definición de segmentos 
#define sA 13
#define sB 12
#define sC 14
#define sD 27
#define sE 26
#define sF 22
#define sG 23
#define sP 21


//********************************************************************* 

  void mostrador();
  void temporizacion();

//********************************************************************* 




volatile bool enviar = false;
int valor1;
int valor2;
int multiplicacion;



// Set up the 'counter' feed
AdafruitIO_Feed *Canal1 = io.feed("valor1");
AdafruitIO_Feed *Canal2 = io.feed("valor2");
AdafruitIO_Feed *Canal3 = io.feed("multiplicacion");

void IRAM_ATTR onButton1Press() {
  enviar = true;
}

void buttons(void);
void adaf();

void setup() {
  // Start the serial connection
  Serial.begin(115200);

  // Wait for serial monitor to open
  while (!Serial);

  Serial.print("Connecting to Adafruit IO");

  // Connect to io.adafruit.com
  io.connect();

  // Wait for a connection
  while (io.status() < AIO_CONNECTED) {
    Serial.print(".");
    delay(500);
  }

  // We are connected
  Serial.println();
  Serial.println(io.statusText());

 configurarDisplay(sA, sB,sC, sD, sE, sF, sG, sP);
 pinMode (DIS1, OUTPUT);
 pinMode (DIS2, OUTPUT);

 buttons();
 mostrador();
 temporizacion();
 adaf();

}

void loop() {
   //io.run();
 temporizacion ();

  //********************************************************** 
  


 
}

void adaf(){
   // io.run() is required for all sketches.

/*  Serial.print("valor1: ");
  Serial.println(valor1);
  Serial.print("valor2: ");
  Serial.println(valor2);
*/

  if (enviar) {
    
    enviar = false; // Resetea el estado del botón
    multiplicacion = (valor1 * valor2);

    // Save count to the 'counter' feed on Adafruit IO
    Serial.print("sending -> ");
    Serial.println();
    Canal1->save(valor1);
    Canal2->save(valor2);
    Canal3->save(multiplicacion);
  }
}
void mostrador (){

   // Lee los valores de los pines analógicos
  valor1 = analogRead(34);
  valor2 = analogRead(35);
  valor1 = map(valor1, 0, 4095, 0, 15); // La librería ya convierte los valores de 10-15 en A-F
  valor2 = map(valor2, 0, 4095, 0, 15); // La librería ya convierte los valores de 10-15 en A-F

  //Mostrar en display digito 1
   
   desplegarDisplay(valor1);
   //desplegarPunto(0);
  digitalWrite(DIS1, HIGH);
  delay(1);
   digitalWrite(DIS1, LOW);

    //Mostrar en display digito 2 
   desplegarDisplay(valor2);
   //desplegarPunto(0);
  digitalWrite(DIS2, HIGH);
  delay(1);
   digitalWrite(DIS2, LOW);
   

}

void temporizacion() 
{
   int contret=1000;       //Cargue con 50 la variable CONTRET
   while (contret>0) //Mientras que la variable CONTRET sea mayor que cero
   {
      mostrador();        //Llamar la rutina MOSTRAR
      contret--;        // Decremente la variable CONTRET  
   }
      adaf(); 
}

void buttons(void) {
  pinMode(BTN1, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(BTN1), onButton1Press, FALLING);
}
